swagger: "2.0"
info:
  description: "REST API service that will give you a quick and easy way to get data from the database"
  version: "1.0.0"
  title: "super-enigma-service"
paths:
  /movies:
    get:
      tags:
      - "movies"
      summary: "Gets a list of movies"
      operationId: "getMovies"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "number"
      - name: "perPage"
        in: "query"
        description: "Number of movies per page"
        required: false
        type: "number"
      - name: "sortBy"
        in: "query"
        description: "Query for sorting movies"
        required: false
        type: "string"
      - name: "title"
        in: "query"
        description: "Movies title"
        required: false
        type: "string"
      - name: "year"
        in: "query"
        description: "Movies year"
        required: false
        type: "number"
      - name: "genre"
        in: "query"
        description: "Movies genre"
        required: false
        type: "number"
      - name: "vote_average"
        in: "query"
        description: "Movies vote average"
        required: false
        type: "number"
      - name: "popularity"
        in: "query"
        description: "Movies popularity"
        required: false
        type: "number"
      - name: "lang"
        in: "query"
        description: "Movies language"
        required: false
        type: "string"
      - name: "vote_count"
        in: "query"
        description: "Movies vote count"
        required: false
        type: "number"
      - name: "original_title"
        in: "query"
        description: "Movies original title"
        required: false
        type: "string"
      - name: "video"
        in: "query"
        description: "If true, return movies with video"
        required: false
        type: "boolean"
      - name: "adult"
        in: "query"
        description: "If true, return adult movies"
        required: false
        type: "boolean"
      responses:
        200:
          description: 'Successfully get movies'
          schema:
            type: array
            items:
              $ref: '#/definitions/Genre'
        400:
          description: "Error during getting movies"
  /movies/{id}:
    get:
      tags:
      - "movies"
      summary: "Gets a movie by id"
      operationId: "getMovieById"
      parameters:
      - name: "id"
        in: "path"
        description: "Gets movie by id"
        required: true
        type: "boolean"
      responses:
        200:
          description: "Successfully get movie by id"
          schema:
            $ref: '#/definitions/Movie'
        400:
          description: "Error during getting movies by id"
        404:
          description: "Movie not found"
  /genres:
    get:
      tags:
      - "genres"
      summary: "Get genres"
      description: "Gets all genres"
      operationId: "getGenres"
      responses:
        200:
          description: "Successfully get genres"
          schema:
            type: array
            items:
              $ref: '#/definitions/Genre'
        400:
          description: "Error during getting genres"
  /genres/{id}:
    get:
      tags:
      - "genres"
      summary: "Gets a genre by id"
      operationId: "getGenreById"
      parameters:
      - name: "id"
        in: "path"
        description: "Gets genre by id"
        required: true
        type: "boolean"
      responses:
        200:
          description: "Successfully get movie by id"
          schema:
            $ref: '#/definitions/Genre'
        400:
          description: "Error during getting movies by id"
        404:
          description: "Genre not found"
definitions:
  Movie:
    type: "object"
    properties:
      id:
        type: "number"
      title:
        type: "string"
      overview:
        type: "string"
      release_date:
        type: "number"
      vote_average:
        type: "number"
      popularity:
        type: "number"
      original_langiage:
        type: "string"
      vote_count:
        type: "number"
      original_title:
        type: "string"
      poster_path:
        type: "string"
      backdrop_path:
        type: "string"
      video:
        type: "boolean"
      adult:
        type: "boolean"
  Genre:
    type: "object"
    properties:
      id:
        type: "number"
      name:
        type: "string"
